library(R.matlab)
spm_info <- readMat(mattmp)
mnames <- unlist(spm_info$mnames)
cpos <- as.vector(spm_info$cpos)
bpos <- as.vector(spm_info$bpos)
npos <- as.vector(spm_info$npos)

#by default, only estimate contrasts of interest
minterest <- mnames[cpos]
reg_names <- sub(\"Sn\\(\\d+\\)\\s+\", \"\", minterest, perl=TRUE)
reg_split <- split(minterest, reg_names)


#don't estimate the run intercept contrast (should be handled already by using cpos above)
#if (any(which_const <- names(reg_split) == "constant")) { reg_split <- reg_split[!which_const] }

cn <- 1 #contrast number

if (effects_of_interest_F) {
  #f contrast tutorial: https://www.youtube.com/watch?v=aqWtk4-ayg4
  cvec <- rep(0, length(mnames))
  cvec[cpos] <- 1 #unit height for all effects of interest
  m_string <- c(m_string,
    paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn, "}.fcon.name = 'Effects of interest';"),
    paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn, "}.fcon.weights = [", paste(cvec, collapse=", "), "];"),
    paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn, "}.fcon.sessrep = 'none';")
  )
  cn <- cn + 1 #increment contrast number
}

if (condition_contrasts) {
  # compute average contrasts for conditions (potentially across multiple sessions/runs)
  m_string <- c(m_string,
    paste0("% consess ", cn),
    paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn, "}.tcon.name = '", rownames(cmat)[cn], "';"),
    paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn, "}.tcon.convec = [ ", paste(cmat[cn,], collapse=", "), " ];"),
    paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn, "}.tcon.sessrep = 'none';") #not using session replication at the moment...
  )
  
  cmat <- c()
  for (rr in 1:length(reg_split)) {
    nruns <- length(reg_split[[rr]])
    cweight <- 1/nruns
    cvec <- rep(0, length(mnames))
    cvec[ mnames %in% reg_split[[rr]] ] <- cweight
    cmat <- rbind(cmat, cvec)
  }
  rownames(cmat) <- paste0(make.names(names(reg_split)), ".ravg")
  colnames(cmat) <- make.names(mnames)

  m_string <- c(
    spm_preamble,
    "% SETUP BATCH JOB STRUCTURE",
    "contrast = struct;",
    "% spmmat",
    paste0("contrast.matlabbatch{1}.spm.stats.con.spmmat = { ['", output_dir, "' filesep 'SPM.mat']};")
  )

  for (ii in 1:nrow(cmat)) {
    m_string <- c(m_string,
      paste0("% consess ", cn),
      paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn + ii - 1, "}.tcon.name = '", rownames(cmat)[cn], "';"),
      paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn + ii - 1, "}.tcon.convec = [ ", paste(cmat[cn,], collapse=", "), " ];"),
      paste0("contrast.matlabbatch{1}.spm.stats.con.consess{", cn + ii - 1, "}.tcon.sessrep = 'none';") #not using session replication at the moment...
    )
  }
  
  cn <- cn + nrow(cmat) #increment contrast number

  m_string <- c(m_string,
    "% delete?",
    "contrast.matlabbatch{1}.spm.stats.con.delete = 0;",
    "% RUN BATCH JOB",
    "spm_jobman('run',contrast.matlabbatch);"
  )

  cat(m_string, file=file.path(output_dir, "estimate_glm_contrasts.m"), sep="\n")
  spm_syntax[["glm_contrasts"]] <- m_string  

  }
